{"version":3,"file":"index.modern.js","sources":["../src/lib/Figure/Figure.tsx","../src/theme.ts","../src/lib/Quote/Quote.tsx"],"sourcesContent":["import React from 'react'\nimport styled from '@emotion/styled'\n\nexport type FigureProps = {\n  src: string\n  alt: string\n  caption?: string\n  isCover?: boolean\n}\n\nconst StyledFigure = styled.figure`\n  height: 100%;\n`\n\nconst StyledImage = styled.img<{ isCover: boolean }>`\n  display: block;\n  height: ${(props) => (props.isCover ? '100%' : 'auto')};\n  object-fit: ${(props) => (props.isCover ? 'cover' : 'contain')};\n  width: 100%;\n`\n\nexport const Figure = ({\n  src = '',\n  alt = '',\n  caption = '',\n  isCover = false\n}: FigureProps) => {\n  const cloudinarySrc = src?.split('/upload')\n\n  if (!cloudinarySrc || cloudinarySrc.length <= 1) {\n    return null\n  }\n\n  const optimizedSrc = `${cloudinarySrc[0]}/upload/w_auto,q_auto${cloudinarySrc[1]}`\n\n  return (\n    <span className='ds-figure'>\n      <StyledFigure>\n        <StyledImage isCover={isCover} src={optimizedSrc} alt={alt} />\n      </StyledFigure>\n      {caption && <figcaption className='ds-small-body'>{caption}</figcaption>}\n    </span>\n  )\n}","import facepaint from 'facepaint'\n\nexport const theme = {\n  colors: {\n    grayscale: {\n      darker: '#262626',\n      dark: '#4D4D4D',\n      medium: '#737373',\n      light: '#D9D9D9',\n      lighter: '#FAFAFA',\n      white: '#FFFFFF'\n    },\n    redscale: {\n      darker: '#D44527',\n      dark: '#F65836',\n      medium: '#F67055',\n      light: '#F7856E',\n      lighter: '#FAAE9E'\n    }\n  },\n  mediaQuery: {\n    mobile: '360px',\n    tablet: '768px',\n    desktop: '1440px'\n  },\n  spacing: {\n    // ['default, '@360px', '@768px', '@1440px']\n    xxxSmall: ['0.25rem', '0.25rem', '0.25rem', '0.25rem'],\n    xxSmall: ['0.5rem', '0.5rem', '0.5rem', '0.5rem'],\n    xSmall: ['0.75rem', '0.75rem', '0.75rem', '1rem'],\n    small: ['1.25rem', '1.25rem', '1.25rem', '1.5rem'],\n    medium: ['1.5rem', '1.5rem', '1.5rem', '2rem'],\n    large: ['2rem', '2rem', '2rem', '2.5rem'],\n    xLarge: ['3rem', '3rem', '3rem', '4rem'],\n    xxLarge: ['4rem', '4rem', '4rem', '6rem'],\n    xxxLarge: ['6rem', '6rem', '6rem', '8rem']\n  },\n  transitions: {\n    durations: {\n      slow: '0.75s',\n      medium: '0.5s',\n      fast: '0.15s'\n    }\n  }\n}\n\nexport const mq = facepaint(\n  Object.values(theme.mediaQuery).map((mq) => `@media(min-width: ${mq})`)\n)\n","import React from 'react'\nimport styled from '@emotion/styled'\nimport { Figure } from '../Figure'\nimport { mq, theme } from '../../theme'\n\nexport interface QuoteProps {\n  attribution: string\n  quotation: string\n  image: {\n    src: string\n    alt: string\n  }\n}\n\nconst StyledQuote = styled.div(() =>\n  mq({\n    display: 'flex',\n    flexDirection: ['column', 'column', 'row'],\n    gap: theme.spacing.xSmall\n  })\n)\n\nconst StyledImageContainer = styled.div(() =>\n  mq({\n    width: ['6rem', '6rem', '8rem', '9rem']\n  })\n)\n\nconst StyledBlockquote = styled.blockquote(() =>\n  mq({\n    display: 'flex',\n    margin: [0, 0, theme.spacing.xxSmall],\n  })\n)\n\nconst StyledTextContainer = styled.div(() =>\n  mq({\n    display: 'inherit',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    marginLeft: theme.spacing.xxSmall,\n    paddingBottom: theme.spacing.xxSmall,\n    paddingTop: theme.spacing.xxSmall\n  })\n)\n\nconst StyledCite = styled.cite(() =>\n  mq({\n    color: theme.colors.grayscale.medium,\n    '&:before': {\n      color: theme.colors.redscale.dark,\n      content: '\"—\"',\n      paddingRight: theme.spacing.xxxSmall\n    }\n  })\n)\n\nconst SvgOpenQuote = (props: any) => (\n  <svg\n    width={32}\n    height={27}\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    {...props}\n  >\n    <path\n      d=\"M12 13.5H7L12.5 0H8L0 13.5V27h12V13.5Zm19 0h-5L31.5 0H27l-8 13.5V27h12V13.5Z\"\n    />\n  </svg>\n)\n\nconst StyledOpenQuote = styled(SvgOpenQuote)(() => {\n  return mq({\n    transform: ['scale(0.75)', 'scale(0.75)', 'scale(1)'],\n  })\n})\n\nexport function Quote({ attribution = '', quotation, image }: QuoteProps) {\n  return (\n    <StyledQuote className='ds-quote ds-section-spacing'>\n      <div>\n        <StyledImageContainer>\n          {image &&\n            <Figure src={image.src} alt={image.alt} />\n          }\n        </StyledImageContainer>\n      </div>\n      <StyledBlockquote>\n        <div>\n          <StyledOpenQuote />\n        </div>\n        <StyledTextContainer>\n          <h4>{quotation}”</h4>\n          {attribution &&\n            <StyledCite>{attribution}</StyledCite>\n          }\n        </StyledTextContainer>\n      </StyledBlockquote>\n    </StyledQuote >\n  )\n}\n\nexport default Quote\n"],"names":["styled","figure","img","props","isCover","src","alt","caption","split","cloudinarySrc","length","className","React","StyledFigure","StyledImage","colors","grayscale","darker","dark","medium","light","lighter","white","redscale","mediaQuery","mobile","tablet","desktop","spacing","xxxSmall","xxSmall","xSmall","small","large","xLarge","xxLarge","xxxLarge","transitions","durations","slow","fast","facepaint","Object","values","theme","map","mq","div","display","flexDirection","gap","width","blockquote","margin","justifyContent","marginLeft","paddingBottom","paddingTop","cite","color","&:before","content","paddingRight","height","fill","xmlns","d","transform","attribution","quotation","image","StyledQuote","StyledImageContainer","Figure","StyledBlockquote","StyledOpenQuote","StyledTextContainer","StyledCite"],"mappings":"4FAUA,QAAqBA,EAAOC;;MAIRD,EAAOE;;YAAV;gBAAA;;GAEJC,GAAWA,EAAMC,QAAU,OAAS,OAChCD,GAAWA,EAAMC,QAAU,QAAU,aAIhC,EACpBC,IAAAA,EAAM,GACNC,IAAAA,EAAM,GACNC,QAAAA,EAAU,GACVH,QAAAA,GAAU,MAEV,cAAsBC,SAAAA,EAAKG,MAAM,WAEjC,OAAKC,GAAiBA,EAAcC,QAAU,+BAOtCC,UAAU,aACdC,gBAACC,OACCD,gBAACE,GAAYV,QAASA,EAASC,OALbI,EAAc,0BAA0BA,EAAc,KAKtBH,IAAKA,KAExDC,GAAWK,8BAAYD,UAAU,iBAAiBJ,OCtCpC,CACnBQ,OAAQ,CACNC,UAAW,CACTC,OAAQ,UACRC,KAAM,UACNC,OAAQ,UACRC,MAAO,UACPC,QAAS,UACTC,MAAO,WAETC,SAAU,CACRN,OAAQ,UACRC,KAAM,UACNC,OAAQ,UACRC,MAAO,UACPC,QAAS,YAGbG,WAAY,CACVC,OAAQ,QACRC,OAAQ,QACRC,QAAS,UAEXC,QAAS,CAEPC,SAAU,CAAC,UAAW,UAAW,UAAW,WAC5CC,QAAS,CAAC,SAAU,SAAU,SAAU,UACxCC,OAAQ,CAAC,UAAW,UAAW,UAAW,QAC1CC,MAAO,CAAC,UAAW,UAAW,UAAW,UACzCb,OAAQ,CAAC,SAAU,SAAU,SAAU,QACvCc,MAAO,CAAC,OAAQ,OAAQ,OAAQ,UAChCC,OAAQ,CAAC,OAAQ,OAAQ,OAAQ,QACjCC,QAAS,CAAC,OAAQ,OAAQ,OAAQ,QAClCC,SAAU,CAAC,OAAQ,OAAQ,OAAQ,SAErCC,YAAa,CACXC,UAAW,CACTC,KAAM,QACNpB,OAAQ,OACRqB,KAAM,aAKMC,EAChBC,OAAOC,OAAOC,EAAMpB,YAAYqB,IAAKC,wBAA4BA,SCjC/C9C,EAAO+C,IAAI,IAC7BD,EAAG,CACDE,QAAS,OACTC,cAAe,CAAC,SAAU,SAAU,OACpCC,IAAKN,EAAMhB,QAAQG,YAIM/B,EAAO+C,IAAI,IACtCD,EAAG,CACDK,MAAO,CAAC,OAAQ,OAAQ,OAAQ,aAIXnD,EAAOoD,WAAW,IACzCN,EAAG,CACDE,QAAS,OACTK,OAAQ,CAAC,EAAG,EAAGT,EAAMhB,QAAQE,cAIL9B,EAAO+C,IAAI,IACrCD,EAAG,CACDE,QAAS,UACTC,cAAe,SACfK,eAAgB,gBAChBC,WAAYX,EAAMhB,QAAQE,QAC1B0B,cAAeZ,EAAMhB,QAAQE,QAC7B2B,WAAYb,EAAMhB,QAAQE,aAIX9B,EAAO0D,KAAK,IAC7BZ,EAAG,CACDa,MAAOf,EAAM7B,OAAOC,UAAUG,OAC9ByC,WAAY,CACVD,MAAOf,EAAM7B,OAAOQ,SAASL,KAC7B2C,QAAS,MACTC,aAAclB,EAAMhB,QAAQC,eAmBV7B,EAdFG,GACpBS,qCACEuC,MAAO,GACPY,OAAQ,GACRC,KAAK,OACLC,MAAM,8BACF9D,GAEJS,wBACEsD,EAAE,kFAKgBlE,CAAqB,MACjC,CACRmE,UAAW,CAAC,cAAe,cAAe,2BAIxBC,YAAEA,EAAc,GAAhBC,UAAoBA,EAApBC,MAA+BA,IACnD,uBACGC,GAAY5D,UAAU,+BACrBC,2BACEA,gBAAC4D,OACEF,GACC1D,gBAAC6D,GAAOpE,IAAKiE,EAAMjE,IAAKC,IAAKgE,EAAMhE,QAIzCM,gBAAC8D,OACC9D,2BACEA,gBAAC+D,SAEH/D,gBAACgE,OACChE,0BAAKyD,OACJD,GACCxD,gBAACiE,OAAYT"}